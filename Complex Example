# http://blog.csdn.net/yujunbeta/article/details/17023287
simData=function(radius,width,distance,sample_size)  
{
  aa1=runif(sample_size/2)
  aa2=runif(sample_size/2)  
	  rad=(radius-width/2)+width*aa1  
   theta=pi*aa2  
   x=rad*cos(theta)  
   y=rad*sin(theta)  

   label=1*rep(1,length(x))     
   x1=rad*cos(-theta)+rad  
   y1=rad*sin(-theta)-distance  
   label1=-1*rep(1,length(x1))  
   
   n_row=length(x)+length(x1)  
   data=matrix(rep(0,3*n_row),nrow=n_row,ncol=3)  
   data[,1]=c(x,x1)  
   data[,2]=c(y,y1)  
   data[,3]=c(label,label1)  
    
   data  
    
}  
dataSim=simData(radius=10,width=6,distance=-6,sample_size=3000)  
colnames(dataSim)<-c("x","y","label")  
dataSim<-as.data.frame(dataSim) 

# Sigmod核的分类预测：
m1 <- svm(label ~x+y, data =dataSim,cross=10,type="C-classification",kernel="sigmoid")
m1
summary(m1)
pred1<-fitted(m1)
table(pred1,dataSim[,3])

linear.svm.fit <- svm(label ~ x + y, data = dataSim, kernel ='linear')
with(dataSim, mean(label == ifelse(predict(linear.svm.fit) > 0,1, -1)))
 
polynomial.svm.fit <- svm(label ~ x + y, data = dataSim, kernel ='polynomial')
with(dataSim, mean(label == ifelse(predict(polynomial.svm.fit) >0, 1, -1)))
 
radial.svm.fit <- svm(label ~ x + y, data = dataSim, kernel ='radial')
with(dataSim, mean(label == ifelse(predict(radial.svm.fit) > 0,1, -1)))
 
sigmoid.svm.fit <- svm(label ~ x + y, data = dataSim, kernel ='sigmoid')
with(dataSim, mean(label == ifelse(predict(sigmoid.svm.fit) > 0,1, -1)))
 
df <- cbind(dataSim,
           data.frame(LinearSVM = ifelse(predict(linear.svm.fit) > 0, 1, -1),
                      PolynomialSVM = ifelse(predict(polynomial.svm.fit) > 0, 1, -1),
                      RadialSVM = ifelse(predict(radial.svm.fit) > 0, 1, -1),
                      SigmoidSVM = ifelse(predict(sigmoid.svm.fit) > 0, 1, -1)))
library("reshape")
predictions <- melt(df, id.vars = c('x', 'y'))
library('ggplot2')
ggplot(predictions, aes(x = x, y = y, color = factor(value))) + geom_point() + facet_grid(variable ~ .)
  
  
setwd("D:/R/data/digits/trainingDigits")
names<-list.files("D:/R/data/digits/trainingDigits")
data<-paste("train",1:1934,sep="")
for(i in 1:length(names))
         assign(data[i],as.vector(as.matrix(read.fwf(names[i],widths=rep(1,32)))))
label<-rep(0:9,c(189,198,195,199,186,187,195,201,180,204))
 
data1<-get(data[1])
for(i in 2:length(names))
         data1<-rbind(data1,get(data[i]))
 
m <- svm(data1,label,cross=10,type="C-classification")
m
summary(m)
pred<-fitted(m)
table(pred,label)
 
setwd("D:/R/data/digits/testDigits")
names<-list.files("D:/R/data/digits/testDigits")
data<-paste("train",1:1934,sep="")
for(i in 1:length(names))
         assign(data[i],as.vector(as.matrix(read.fwf(names[i],widths=rep(1,32)))))
data2<-get(data[1])
for(i in 2:length(names))
         data2<-rbind(data2,get(data[i]))
pred<-predict(m,data2)
labeltest<-rep(0:9,c(87,97,92,85,114,108,87,96,91,89))
table(pred,labeltest)
